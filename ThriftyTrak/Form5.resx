<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>